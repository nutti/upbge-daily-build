name: UPBGE daily build

on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * *"
  push:
    branches:
      - main
      - 'run-ci/**'
  pull_request:

jobs:
  build_upbge:
    name: Build UPBGE
    runs-on: ubuntu-latest
    steps:
      - name: Checkout UPBGE sources from GitHub
        run: |
          mkdir -p upbge-build
          cd upbge-build
          GIT_LFS_SKIP_SMUDGE=1 git clone --recursive https://github.com/UPBGE/upbge.git
          cd upbge
          make update
          git lfs pull lfs-fallback
          cd ..
      - name: Install initial packages
        run: |
          sudo apt update
          sudo apt install python3 git git-lfs
      - name: Install basic building environment
        run: |
          cd upbge-build/upbge
          ./build_files/build_environment/install_linux_packages.py
      - name: Download libraries
        run: |
          cd upbge-build/upbge
          ./build_files/utils/make_update.py --use-linux-libraries
      - name: Build UPBGE
        run: |
          cd upbge-build/upbge
          make update
          make
      - name: Test UPBGE Binary
        run: |
          ./upbge-build/build_linux/bin/blender --background --factory-startup -noaudio
      - name: Compress UPBGE for the artifacts
        run: |
          mkdir release
          cp -r ./upbge-build/build_linux/bin release/upbge
          cd release
          tar Jcf upbge.tar.xz upbge
          rm -rf upbge
      - name: Create MD5 checksum file
        run: |
          cd release
          md5sum upbge.tar.xz > upbge.tar.xz.md5
      - name: Upload artifact 
        uses: actions/upload-artifact@v4
        with:
          name: upbge
          path: "release"
      - name: Collect failure state
        if: failure()
        run: cp -r build failure_state
      - name: Store failure state
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: failure_state
          path: failure_state
